version: '3.8'

services:
  # FastAPI Backend
  rag-api:
    build: .
    container_name: rag-api
    ports:
      - "8000:8000"
    volumes:
      - ./vectorstore:/app/vectorstore
      - ./sample_docs:/app/sample_docs
      - ./mlruns:/app/mlruns
    environment:
      - OLLAMA_HOST=host.docker.internal:11434
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: uvicorn api:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - rag-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Gradio UI
  rag-ui:
    build: .
    container_name: rag-ui
    ports:
      - "7860:7860"
    volumes:
      - ./vectorstore:/app/vectorstore
    environment:
      - API_URL=http://rag-api:8000  # Use service name, not localhost
      - PYTHONUNBUFFERED=1
    command: python -u app.py
    depends_on:
      - rag-api
    networks:
      - rag-network

  # MLflow Tracking Server
  mlflow-server:
    build: .
    container_name: mlflow-server
    ports:
      - "5000:5000"
    volumes:
      - ./mlruns:/app/mlruns
    command: mlflow server --host 0.0.0.0 --port 5000 --backend-store-uri file:///app/mlruns
    networks:
      - rag-network

  # Prometheus Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - rag-network

  # Grafana Dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    networks:
      - rag-network

networks:
  rag-network:
    driver: bridge

volumes:
  prometheus-data:
  grafana-data: